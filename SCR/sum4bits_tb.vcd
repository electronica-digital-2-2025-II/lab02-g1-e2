$date
	Sat Oct  4 18:34:40 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sum4b_tb $end
$scope module uut $end
$var wire 4 ! A [3:0] $end
$var wire 4 " B [3:0] $end
$var wire 1 # Ci $end
$var wire 4 $ S [3:0] $end
$var wire 1 % Co $end
$var wire 1 & C2 $end
$var wire 1 ' C1 $end
$var wire 1 ( C0 $end
$scope module bit0 $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var wire 1 # Ci $end
$var wire 1 ( Co $end
$var wire 1 + S $end
$var wire 1 , and1 $end
$var wire 1 - and2 $end
$var wire 1 . xor1 $end
$upscope $end
$scope module bit1 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 ( Ci $end
$var wire 1 ' Co $end
$var wire 1 1 S $end
$var wire 1 2 and1 $end
$var wire 1 3 and2 $end
$var wire 1 4 xor1 $end
$upscope $end
$scope module bit2 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 ' Ci $end
$var wire 1 & Co $end
$var wire 1 7 S $end
$var wire 1 8 and1 $end
$var wire 1 9 and2 $end
$var wire 1 : xor1 $end
$upscope $end
$scope module bit3 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 & Ci $end
$var wire 1 % Co $end
$var wire 1 = S $end
$var wire 1 > and1 $end
$var wire 1 ? and2 $end
$var wire 1 @ xor1 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
b0 $
0#
b0 "
b0 !
$end
#10
1=
1&
19
1'
13
1(
b1000 $
07
14
1,
1:
1*
10
1)
15
b11 "
b101 !
#20
0=
0&
09
17
0'
03
b110 $
11
0(
1%
0,
1>
0*
00
16
1<
0)
1/
05
1;
b1100 "
b1010 !
#30
1=
1'
1(
b1110 $
17
1&
04
12
1,
0:
18
1*
10
1)
15
b1111 "
b1111 !
#100
